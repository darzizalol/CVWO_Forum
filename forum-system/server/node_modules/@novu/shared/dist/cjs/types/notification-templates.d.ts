import { ChannelTypeEnum } from './channel';
export declare enum WorkflowCreationSourceEnum {
    TEMPLATE_STORE = "template_store",
    EDITOR = "editor",
    NOTIFICATION_DIRECTORY = "notification_directory",
    ONBOARDING_DIGEST_DEMO = "onboarding_digest_demo",
    ONBOARDING_IN_APP = "onboarding_in_app",
    EMPTY_STATE = "empty_state",
    DROPDOWN = "dropdown",
    ONBOARDING_GET_STARTED = "onboarding_get_started",
    BRIDGE = "bridge",
    DASHBOARD = "dashboard"
}
export type WorkflowIntegrationStatus = {
    hasActiveIntegrations: boolean;
    hasPrimaryIntegrations?: boolean;
    channels: WorkflowChannelsIntegrationStatus;
};
export type WorkflowChannelsIntegrationStatus = ActiveIntegrationsStatus & ActiveIntegrationStatusWithPrimary;
type ActiveIntegrationsStatus = {
    [key in ChannelTypeEnum]: {
        hasActiveIntegrations: boolean;
    };
};
type ActiveIntegrationStatusWithPrimary = {
    [ChannelTypeEnum.EMAIL]: {
        hasActiveIntegrations: boolean;
        hasPrimaryIntegrations: boolean;
    };
    [ChannelTypeEnum.SMS]: {
        hasActiveIntegrations: boolean;
        hasPrimaryIntegrations: boolean;
    };
};
export declare enum WorkflowTypeEnum {
    REGULAR = "REGULAR",
    ECHO = "ECHO",
    BRIDGE = "BRIDGE"
}
export declare enum WorkflowOriginEnum {
    NOVU_CLOUD = "novu-cloud",
    NOVU_CLOUD_V1 = "novu-cloud-v1",
    EXTERNAL = "external"
}
export declare enum TriggerContextTypeEnum {
    TENANT = "tenant",
    ACTOR = "actor"
}
export {};
//# sourceMappingURL=notification-templates.d.ts.map